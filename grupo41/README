linhas de comentario para indicar o nosso grupo, nomes e numeros, 
  em vez das 3 indicadas no enunciado, esperemos que não seja um problema

2:
  - Alterámos o table-private.h e por consequinte, o table.c, de modo a contar o
  número de colisões
  
  - Criámos um data-private.h e adicionámos a função data_create_empty no
  data.c, de modo a criar uma estrutura data_t com size=0 e data=NULL

  - Criámos um entry-private.h e adicionámos a função entry_destroy no
  message.c, entry.c e table.c, de modo a poder libertar entries

  - Criámos um message-private.h e adicionámos duas funções: message_error, para
  devolver a mensagem de erro, e print_message, método dado pelo professor

  - Movemos a função read_all e write_all para o ficheiro message.c 

  - Não definimos diferentes tipos de erros para diferentes mensagens de erro

  - Para fechar o servidor, este não pode estar a atender algum cliente e temos
  de usar o ctrl+c

3:
  - Acrescentámos um método print_table no table.c para imprimir a tabela como
  pedido pelo professor

  - Acrescentámos um metodo table_skel_print(int n) no table_skel.c para chamar
  o metodo print table sobre a tabela n.

  - Acrescentámos um metodo table_skel_connect que envia o numero de tabelas do
  servidor, a um cliente recem connectado.

  - Tornamos, ambos, o cliente e o servidor, mais robustos, certificando-nos de
  que eram capazes de tratar inputs incorretos e escrevendo no ecra mensagens de
  erro, quando tal acontece.
  
  - Ao servidor, acrescentámos dois comandos introduzidos pelo sdtin: 
  1. print <numero da tabela>  que imprime todas as entradas de uma tabela, 
                               mostrando tambem as colisões que ocorreram
                               
  2. quit que fecha o servidor de forma segura.